Source: Backport from later version of linux-raspberrypi

diff --git a/include/linux/netdevice.h b/include/linux/netdevice.h
index e37480b5f4c0..5daf441534e4 100644
--- a/include/linux/netdevice.h
+++ b/include/linux/netdevice.h
@@ -2161,6 +2161,7 @@ struct net_device {
 	struct lock_class_key	*qdisc_running_key;
 	bool			proto_down;
 	unsigned		wol_enabled:1;
+	unsigned                threaded:1;
 
 	struct list_head	net_notifier_list;
 
diff --git a/include/net/cfg80211.h b/include/net/cfg80211.h
index 8a1bf2dbadd0..642401a40f85 100644
--- a/include/net/cfg80211.h
+++ b/include/net/cfg80211.h
@@ -1727,6 +1727,53 @@ struct station_info {
 	u8 connected_to_as;
 };
 
+/**
+ **  * struct cfg80211_sar_sub_specs - sub specs limit
+ **  * @power: power limitation in 0.25dbm
+ **  * @freq_range_index: index the power limitation applies to
+ **  */
+struct cfg80211_sar_sub_specs {
+	s32 power;
+	u32 freq_range_index;
+};
+
+/**
+ **  * struct cfg80211_sar_specs - sar limit specs
+ **  * @type: it's set with power in 0.25dbm or other types
+ **  * @num_sub_specs: number of sar sub specs
+ **  * @sub_specs: memory to hold the sar sub specs
+ **  */
+struct cfg80211_sar_specs {
+	enum nl80211_sar_type type;
+	u32 num_sub_specs;
+	struct cfg80211_sar_sub_specs sub_specs[];
+};
+
+/**
+ **  * struct cfg80211_sar_freq_ranges - sar frequency ranges
+ **  * @start_freq:  start range edge frequency
+ **  * @end_freq:    end range edge frequency
+ **  */
+struct cfg80211_sar_freq_ranges {
+	u32 start_freq;
+	u32 end_freq;
+};
+
+/**
+ **  * struct cfg80211_sar_capa - sar limit capability
+ **  * @type: it's set via power in 0.25dbm or other types
+ **  * @num_freq_ranges: number of frequency ranges
+ **  * @freq_ranges: memory to hold the freq ranges.
+ **  *
+ **  * Note: WLAN driver may append new ranges or split an existing
+ **  * range to small ones and then append them.
+ **  */
+struct cfg80211_sar_capa {
+	enum nl80211_sar_type type;
+	u32 num_freq_ranges;
+	const struct cfg80211_sar_freq_ranges *freq_ranges;
+};
+
 #if IS_ENABLED(CONFIG_CFG80211)
 /**
  * cfg80211_get_station - retrieve information about a given station
@@ -5016,7 +5063,7 @@ struct wiphy {
 	} tid_config_support;
 
 	u8 max_data_retry_count;
-
+	const struct cfg80211_sar_capa *sar_capa;
 	char priv[] __aligned(NETDEV_ALIGN);
 };
 
diff --git a/include/net/mac80211.h b/include/net/mac80211.h
index 6ff49c13717b..1bf357585c71 100644
--- a/include/net/mac80211.h
+++ b/include/net/mac80211.h
@@ -1325,6 +1325,7 @@ enum mac80211_rx_flags {
 	RX_FLAG_RADIOTAP_HE_MU		= BIT(27),
 	RX_FLAG_RADIOTAP_LSIG		= BIT(28),
 	RX_FLAG_NO_PSDU			= BIT(29),
+	RX_FLAG_8023			= BIT(30),
 };
 
 /**
@@ -4192,6 +4193,8 @@ struct ieee80211_ops {
 				   struct ieee80211_vif *vif);
 	void (*sta_set_4addr)(struct ieee80211_hw *hw, struct ieee80211_vif *vif,
 			      struct ieee80211_sta *sta, bool enabled);
+	int (*set_sar_specs)(struct ieee80211_hw *hw,
+			const struct cfg80211_sar_specs *sar);
 };
 
 /**
diff --git a/include/uapi/linux/nl80211.h b/include/uapi/linux/nl80211.h
index 47700a2b9af9..ce95dce3668c 100644
--- a/include/uapi/linux/nl80211.h
+++ b/include/uapi/linux/nl80211.h
@@ -7124,4 +7124,20 @@ enum nl80211_unsol_bcast_probe_resp_attributes {
 	NL80211_UNSOL_BCAST_PROBE_RESP_ATTR_MAX =
 		__NL80211_UNSOL_BCAST_PROBE_RESP_ATTR_LAST - 1
 };
+
+/**
+ **  * enum nl80211_sar_type - type of SAR specs
+ **  *
+ **  * @NL80211_SAR_TYPE_POWER: power limitation specified in 0.25dBm unit
+ **  *
+ **  */
+enum nl80211_sar_type {
+	NL80211_SAR_TYPE_POWER,
+
+	/* add new type here */
+
+	/* Keep last */
+	NUM_NL80211_SAR_TYPE,
+};
+
 #endif /* __LINUX_NL80211_H */
